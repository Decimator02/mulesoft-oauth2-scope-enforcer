<?xml version="1.0" encoding="UTF-8"?>
<!-- 
#
# Copyright (c) 2017 The Trustees of Columbia University in the City of New York
# 
-->
<policy xmlns="http://www.mulesoft.org/schema/mule/policy"
   id="{{policyId}}"
   order="6000"
   policyName="OAuth 2.0 Scope Enforcement Policy"
   online="true"
   requiresContracts="true"
   xmlns:mule="http://www.mulesoft.org/schema/mule/core"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
   xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw"
   xsi:schemaLocation="http://www.mulesoft.org/schema/mule/policy http://www.mulesoft.org/schema/mule/policy/current/mule-policy.xsd
		       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
		       http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd">

    <pointcut>
      <api-platform-gw:api-pointcut apiName="{{ apiName }}" apiVersion="{{ apiVersionName }}"/>
    </pointcut>

    <before>
      <mule:set-variable variableName="scopeMap" value="#[new java.util.HashMap();]" />
      <!-- hmm, I could probably just embed this mustache in the Python code... -->
      {{#scopeMap}}
      	<mule:expression-component><![CDATA[
      	  flowVars.scopeMap.put("{{ key }}","{{ value }}");
          ]]>
      	</mule:expression-component>
      {{/scopeMap}}
      <scripting:component>
        <scripting:script engine="jython"><![CDATA[
import json
# dig the scope list out of the JSON map:
r = flowVars['_agwTokenContext']
map = json.loads(r)
if 'scope' in map:
  scope = map['scope']
else:
  scope = ''
flowVars['scope'] = scope
k = 'X-AGW-scope'  # apparently can't pass an immutable string as the key
message.setOutboundProperty(k,flowVars['scope'])
# look for configured required scopes for this method and resource:
scopeMap = flowVars['scopeMap']
lp = 'http.listener.path'
listenerPath = message.getInboundProperty(lp)
resource = 'xxx'
m = 'http.method'
method = message.getInboundProperty(m).lower()
rp = 'http.request.path'
requestPath = message.getInboundProperty(rp)
# strip the listener path out of the URL
#    http.listener.path=/v1/api/*
#     http.request.path=/v1/api/things
if requestPath.find(listenerPath) == 0:
  request = requestPath[len(listenerPath)-2:]
  print("request is %s"%request)
  scopeMapKey = method+':'+resource.replace('/','&#x2F;')
  print("scopeMapkey is %s"%scopeMapKey)
  if scopeMapKey in scopeMap:
    requiredScopes = scopeMap[scopeMapKey]
    print("Required Scopes: %s. Granted Scopes: %s. Now intersect them!"%(requiredScope,scope))
  else:
    requiredScopes = ''

result=payload
]]>
        </scripting:script>
      </scripting:component>
    </before>

</policy>
